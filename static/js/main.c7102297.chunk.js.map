{"version":3,"sources":["components/Footer.js","components/VideoPlayer.js","components/PlaylistItem.js","components/Playlist.js","components/PlayerWrapper.js","components/DocumentList.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","Message","size","icon","Icon","name","color","Content","React","Component","VideoPlayer","Container","Header","controls","onEnded","this","props","nextVideo","url","PlaylistItem","List","Item","as","href","onClick","e","handleClick","title","preventDefault","Playlist","index","changeVideo","items","videos","map","video","file","PlayerWrapper","state","currentIndex","currentUrlVideo","autoplay","self","fetch","then","res","json","setState","length","Segment","vertical","Grid","stackable","celled","Column","width","DocumentList","documents","arr","doc","target","textAlign","ordered","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7102297.chunk.js","sourcesContent":["import React from 'react'\nimport { Message, Icon } from 'semantic-ui-react'\n\n\nexport class Footer extends React.Component {\n  render() {\n    return (\n      <Message size='large' icon>\n        <Icon name='like' color='red' />\n        <Message.Content>\n          Improve Your English by experiencing our Accent Reduction Course to learn English Pronunciation and American Accent.\n        </Message.Content>\n      </Message>\n    )\n  }\n}\n","import React from 'react'\nimport { Container, Header, Icon } from 'semantic-ui-react'\nimport ReactPlayer from 'react-player'\n\nexport class VideoPlayer extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Header size='large'>\n          <Icon name='film' color='green' />\n          <Header.Content>\n            Video\n          </Header.Content>\n        </Header>\n        <ReactPlayer controls={true} onEnded={this.props.nextVideo} url={this.props.url}>\n        </ReactPlayer>\n      </Container>\n    )\n  }\n}\n","import React from 'react'\nimport { List } from 'semantic-ui-react'\n\n\nexport class PlaylistItem extends React.Component {\n\n  render() {\n    return (\n      <List.Item as='a' href={this.props.url} onClick={(e) => this.handleClick(e)}>\n        {this.props.title}\n      </List.Item>\n    )\n  }\n\n  handleClick(e) {\n    e.preventDefault()\n    this.props.onClick()\n  }\n}\n","import React from 'react'\nimport { Container, Header, List, Icon } from 'semantic-ui-react'\nimport { PlaylistItem } from './PlaylistItem'\n\n\nexport class Playlist extends React.Component {\n\n  handleClick(index) {\n    this.props.changeVideo(index)\n  }\n\n  render() {\n    const items = this.props.videos.map((video, index) => {\n      return (\n        <PlaylistItem\n          key={index}\n          title={video.name}\n          url={video.file}\n          onClick={() => this.handleClick(index)} />\n      )\n    })\n\n    return (\n      <Container>\n        <Header size='large'>\n          <Icon name='list' color='blue' />\n          <Header.Content>\n            Playlist\n          </Header.Content>\n        </Header>\n        <List>\n          {items}\n        </List>\n      </Container>\n    )\n  }\n}\n","import React from 'react'\nimport { Segment, Grid } from 'semantic-ui-react'\nimport { VideoPlayer } from './VideoPlayer'\nimport { Playlist } from './Playlist'\n\n\nexport class PlayerWrapper extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      videos: [],\n      currentIndex: 0,\n      currentUrlVideo: \"\",\n      autoplay: false,\n    }\n  }\n\n  componentDidMount() {\n    const self = this\n    // get videos data\n    fetch('videos.json')\n    .then(res => res.json())\n    .then(videos => {\n      self.setState({\n        videos,\n        currentIndex: 0,\n        currentUrlVideo: videos[0].file,\n      })\n    })\n  }\n\n  changeVideo(index) {\n    if (index < this.state.videos.length) {\n      this.setState({\n        currentIndex: index,\n        currentUrlVideo: this.state.videos[index].file,\n        autoplay: true,\n      })\n    }\n  }\n\n  nextVideo() {\n    let currentIndex = this.state.currentIndex;\n    if (currentIndex < this.state.videos.length) {\n      currentIndex++\n      this.changeVideo(currentIndex)\n    }\n  }\n\n  render() {\n    return (\n      <Segment vertical>\n        <Grid stackable celled='internally'>\n          <Grid.Column width={11}>\n            <VideoPlayer\n              url={this.state.currentUrlVideo}\n              autoplay={this.state.autoplay}\n              nextVideo={() => this.nextVideo()} />\n          </Grid.Column>\n          <Grid.Column width={5}>\n            <Playlist\n              videos={this.state.videos}\n              changeVideo={index => this.changeVideo(index)} />\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    )\n  }\n}\n","import React from 'react'\nimport { Segment, Header, List, Icon } from 'semantic-ui-react'\n\n\nexport class DocumentList extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      documents: []\n    }\n  }\n\n  componentDidMount() {\n    const self = this\n    // get document data\n    fetch('documents.json')\n    .then(res => res.json())\n    .then(arr => self.setState({ documents: arr }))\n  }\n\n  render() {\n    const items = this.state.documents.map((doc, index) => {\n      return (\n        <List.Item key={index} as='a' target=\"_blank\" href={doc.file}>\n          {doc.name}\n        </List.Item>\n      )\n    })\n\n    return (\n      <Segment vertical>\n        <Header size='large' textAlign=\"left\">\n          <Icon name='file pdf outline' color='red' />\n          <Header.Content>\n            Documents\n          </Header.Content>\n        </Header>\n\n        <List ordered>\n          {items}\n        </List>\n      </Segment>\n    )\n  }\n}\n","import { Container, Header } from 'semantic-ui-react'\nimport { Footer } from './components/Footer'\nimport { PlayerWrapper } from './components/PlayerWrapper'\nimport { DocumentList } from './components/DocumentList'\n\nfunction App() {\n  return (\n    <Container className=\"raised very padded segment\">\n      <Header size='huge' textAlign='center'>\n        Pronunciation Workshop Vietsub\n      </Header>\n      <PlayerWrapper />\n      <DocumentList />\n      <Footer />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'fomantic-ui-css/semantic.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}